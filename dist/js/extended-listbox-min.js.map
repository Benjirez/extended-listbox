{"version":3,"sources":["webpack://extendedlistbox/webpack/bootstrap","webpack://extendedlistbox/./src/ts/BaseListBox.ts","webpack://extendedlistbox/./src/ts/Index.ts","webpack://extendedlistbox/./src/ts/SingleSelectListBox.ts","webpack://extendedlistbox/./src/ts/MultiSelectListBox.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","BaseListBox","[object Object]","domelement","options","multiple","this","dataItems","selectedDataItems","searchBar","searchBarWatermark","searchBarButton","visible","_target","_settings","classList","add","MAIN_CLASS","_createSearchbar","_createList","searchbarWrapper","document","createElement","SEARCHBAR_CLASS","appendChild","searchbar","setAttribute","onkeyup","searchQuery","toLowerCase","items","_list","querySelectorAll","LIST_ITEM_CLASS","length","thisItem","item","contains","LIST_ITEM_CLASS_GROUP","innerText","search","style","display","parentElement","groups","childs","index","j","_filterChanged","button","id","SEARCHBAR_BUTTON_CLASS","onClick","onclick","icon","split","forEach","_searchbarWrapper","_searchbar","LIST_CLASS","_resizeListToListBox","getItems","addItem","_prepareDataItem","parseInt","Math","random","dataItem","childItems","disabled","groupHeader","_generateItemId","parentGroupId","selected","text","push","internal","parent","tabIndex","title","onkeydown","e","target","eventPhase","which","_fireEvent","EVENT_ITEM_ENTER_PRESSED","_getDataItem","preventDefault","_itemArrowUp","_itemArrowDown","_itemClicked","ctrlKey","ondblclick","EVENT_ITEM_DOUBLE_CLICKED","LIST_ITEM_CLASS_DISABLED","possibleParent","_locateItem","LIST_ITEM_CLASS_CHILD","undefined","children","insertBefore","_addItem","computed","window","getComputedStyle","containerPadding","getPropertyValue","listHeight","offsetHeight","height","domItem","remove","LIST_ITEM_CLASS_SELECTED","currentItem","removeIndex","indexOf","splice","querySelector","titleItems","current","direction","potentialNext","sibling","nextChildren","firstElementChild","lastElementChild","args","delegate","toUpperCase","substr","eventName","element","Array","slice","prev","_findNextItem","_clearItemSelection","next","clearSelection","EVENT_ITEMS_CHANGED","map","uiItem","removeChild","selectedIndex","removeItem","firstChild","allItems","data","newIndex","previousElementSibling","_elementIndex","nextElementSibling","parentNode","enable","MAIN_DISABLED_CLASS","EVENT_VALUE_CHANGED","EVENT_FILTER_CHANGED","SingleSelectListBox","domElement","super","_selectedDomItem","_createListbox","ctrl","toggle","focus","elements","MultiSelectListBox"],"mappings":"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","file":"extended-listbox-min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","import {ListBoxSettings} from \"./contract/ListBoxSettings\";\r\nimport {ListBoxEvent} from \"./event/ListBoxEvent\";\r\nimport {ListBoxItem} from \"./contract/ListBoxItem\";\r\n\r\nexport abstract class BaseListBox {\r\n\r\n    public static MAIN_CLASS: string = 'listbox-root';\r\n    public static MAIN_DISABLED_CLASS: string = 'listbox-disabled';\r\n    public static LIST_CLASS: string = 'listbox';\r\n    public static LIST_ITEM_CLASS: string = 'listbox-item';\r\n    public static LIST_ITEM_CLASS_DISABLED: string = 'listbox-item-disabled';\r\n    public static LIST_ITEM_CLASS_SELECTED: string = 'listbox-item-selected';\r\n    public static LIST_ITEM_CLASS_GROUP: string = 'listbox-item-group';\r\n    public static LIST_ITEM_CLASS_CHILD: string = 'listbox-item-child';\r\n    public static SEARCHBAR_CLASS: string = 'listbox-searchbar';\r\n    public static SEARCHBAR_BUTTON_CLASS: string = 'listbox-searchbar-button';\r\n\r\n    public static EVENT_VALUE_CHANGED: string = \"valueChanged\";\r\n    public static EVENT_FILTER_CHANGED: string = \"filterChanged\";\r\n    public static EVENT_ITEMS_CHANGED: string = \"itemsChanged\";\r\n    public static EVENT_ITEM_ENTER_PRESSED: string = \"itemEnterPressed\";\r\n    public static EVENT_ITEM_DOUBLE_CLICKED: string = \"itemDoubleClicked\";\r\n\r\n    public _target: HTMLElement;\r\n    public _list: HTMLDivElement;\r\n    private _searchbarWrapper: HTMLDivElement;\r\n    public _searchbar: HTMLInputElement;\r\n\r\n    public _settings: ListBoxSettings;\r\n    private multiple: boolean;\r\n\r\n    private dataItems: ListBoxItem[] = [];\r\n    public selectedDataItems: ListBoxItem[] = [];\r\n\r\n    protected constructor(domelement: HTMLElement, options: ListBoxSettings, multiple: boolean) {\r\n        options = options || {};\r\n        options.searchBar = options.searchBar || false;\r\n        options.searchBarWatermark = options.searchBarWatermark || \"Search...\";\r\n        options.searchBarButton = options.searchBarButton || { visible: false };\r\n\r\n        this._target = domelement;\r\n        this._settings = options;\r\n        this.multiple = multiple;\r\n    }\r\n\r\n    protected abstract _itemClicked(domItem: HTMLElement, ctrl?: boolean): void;\r\n    protected abstract _filterChanged(): void;\r\n\r\n    protected _createListbox(): void {\r\n        this._target.classList.add(BaseListBox.MAIN_CLASS);\r\n\r\n        if (this._settings.searchBar) {\r\n            this._createSearchbar();\r\n        }\r\n\r\n        this._createList();\r\n    }\r\n\r\n    private _createSearchbar(): void {\r\n        // searchbar wrapper is needed for properly stretch\r\n        // the searchbar over the listbox width\r\n        const searchbarWrapper: HTMLDivElement = document.createElement(\"div\");\r\n        searchbarWrapper.classList.add(BaseListBox.SEARCHBAR_CLASS + '-wrapper');\r\n        this._target.appendChild(searchbarWrapper);\r\n\r\n        const searchbar: HTMLInputElement = document.createElement(\"input\");\r\n        searchbar.classList.add(BaseListBox.SEARCHBAR_CLASS);\r\n        searchbar.setAttribute(\"placeholder\", this._settings.searchBarWatermark);\r\n        searchbarWrapper.appendChild(searchbar);\r\n\r\n        // set filter handler\r\n        searchbar.onkeyup = (): void => {\r\n            const searchQuery: string = searchbar.value.toLowerCase();\r\n\r\n            if (searchQuery !== '') {\r\n                // hide list items which are not matched search query\r\n                const items: NodeListOf<HTMLDivElement> = this._list.querySelectorAll<any>(\".\" + BaseListBox.LIST_ITEM_CLASS);\r\n                for (let i: number = 0; i < items.length; i++) {\r\n                    const thisItem: HTMLDivElement = items.item(i);\r\n\r\n                    if (thisItem.classList.contains(BaseListBox.LIST_ITEM_CLASS_GROUP)) {\r\n                        continue;\r\n                    }\r\n\r\n                    const text: string = thisItem.innerText.toLowerCase();\r\n\r\n                    if (text.search(searchQuery) !== -1) {\r\n                        thisItem.style.display = \"block\";\r\n                        thisItem.parentElement.style.display = \"block\";\r\n                    } else {\r\n                        thisItem.style.display = \"none\";\r\n                    }\r\n                }\r\n\r\n                // hide group item only, if all childs are hidden\r\n                const groups: NodeListOf<Element> =\r\n                    this._list.querySelectorAll(\".\" + BaseListBox.LIST_ITEM_CLASS_GROUP);\r\n                for (let i: number = 0; i < groups.length; i++) {\r\n                    const thisItem: HTMLElement = groups.item(i) as HTMLElement;\r\n                    const childs: NodeListOf<Element> = thisItem.querySelectorAll(\".\" + BaseListBox.LIST_ITEM_CLASS);\r\n                    let index: number = -1;\r\n\r\n                    for (let j: number = 0; j < childs.length; j++) {\r\n                        if ((childs.item(j) as HTMLElement).style.display !== \"none\") {\r\n                            index = j;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (index === -1) {\r\n                        thisItem.style.display = \"none\";\r\n                    } else {\r\n                        thisItem.style.display = \"block\";\r\n                    }\r\n                }\r\n            } else {\r\n                // make visible all list items\r\n                const items: NodeListOf<Element> = this._list.querySelectorAll(\".\" + BaseListBox.LIST_ITEM_CLASS);\r\n                for (let i: number = 0; i < items.length; i++) {\r\n                    const thisItem: HTMLElement = items.item(i) as HTMLElement;\r\n                    thisItem.style.display = \"block\";\r\n                }\r\n            }\r\n\r\n            this._filterChanged();\r\n        };\r\n\r\n        if (this._settings.searchBarButton.visible) {\r\n            // create button in search field\r\n            const button: HTMLButtonElement = document.createElement(\"button\");\r\n            button.id = \"searchBarButton\";\r\n            button.setAttribute(\"tabindex\", \"-1\");\r\n            button.classList.add(BaseListBox.SEARCHBAR_BUTTON_CLASS);\r\n            searchbarWrapper.appendChild(button);\r\n\r\n            if (this._settings.searchBarButton.onClick) {\r\n                button.onclick = this._settings.searchBarButton.onClick;\r\n            }\r\n\r\n            // icon for search button\r\n            if (this._settings.searchBarButton.icon) {\r\n                const icon: HTMLElement = document.createElement(\"i\");\r\n                const parts: string[] = this._settings.searchBarButton.icon.split(\" \");\r\n                parts.forEach((p: string) => icon.classList.add(p));\r\n                button.appendChild(icon);\r\n            }\r\n        }\r\n\r\n        // save for using in _resizeListToListBox()\r\n        this._searchbarWrapper = searchbarWrapper;\r\n        this._searchbar = searchbar;\r\n    }\r\n\r\n    private _createList(): void {\r\n        // create container\r\n        this._list = document.createElement(\"div\");\r\n        this._list.classList.add(BaseListBox.LIST_CLASS);\r\n        this._target.appendChild(this._list);\r\n\r\n        this._resizeListToListBox();\r\n\r\n        // create items\r\n        if (this._settings.getItems) {\r\n            const items: (string|ListBoxItem)[] = <(string|ListBoxItem)[]>this._settings.getItems();\r\n            if (items) {\r\n                for (let index in items) {\r\n                    this.addItem(this._prepareDataItem(items[index]), true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _generateItemId(): string {\r\n        const num: number = parseInt(\"\" + (Math.random() * 10000000), 10);\r\n        return \"listBoxItem\" + num;\r\n    }\r\n\r\n    private _prepareDataItem(dataItem: ListBoxItem|string): ListBoxItem {\r\n        /* tslint:disable:no-string-literal */\r\n        let item: ListBoxItem = {\r\n            childItems: [],\r\n            disabled: false,\r\n            groupHeader: null,\r\n            id: this._generateItemId(),\r\n            parentGroupId: null,\r\n            selected: false,\r\n            text: null,\r\n            index: null\r\n        };\r\n        /* tslint:enable:no-string-literal */\r\n\r\n        if (typeof dataItem === \"string\" || typeof dataItem === \"number\") {\r\n            item.text = <string> dataItem;\r\n            return item;\r\n        } else {\r\n            for (let i in dataItem) {\r\n                if (dataItem.hasOwnProperty(i)) {\r\n                    item[i] = dataItem[i];\r\n                }\r\n            }\r\n\r\n            const childs: ListBoxItem[] = [];\r\n\r\n            for (let index in item.childItems) {\r\n                childs.push(this._prepareDataItem(item.childItems[index]));\r\n            }\r\n\r\n            item.childItems = childs;\r\n            return item;\r\n        }\r\n    }\r\n\r\n    private _addItem(dataItem: ListBoxItem, internal: boolean, parent: HTMLElement): string {\r\n        this.dataItems.push(dataItem);\r\n\r\n        const item: HTMLDivElement = document.createElement(\"div\");\r\n        item.classList.add(BaseListBox.LIST_ITEM_CLASS);\r\n        item.innerText = dataItem.text;\r\n        item.id = dataItem.id;\r\n        item.tabIndex = 1;\r\n        item.title = dataItem.text;\r\n        item.onkeydown = (e: KeyboardEvent): void => {\r\n            if (!(<HTMLElement>e.target).classList.contains(BaseListBox.LIST_ITEM_CLASS_GROUP) && e.eventPhase === 2) {\r\n                if (e.which === 13) {\r\n                    // Enter\r\n                    this._fireEvent(BaseListBox.EVENT_ITEM_ENTER_PRESSED, this._getDataItem((e.target as HTMLElement).id));\r\n                } else if (e.which === 38) {\r\n                    // Arrow up\r\n                    e.preventDefault();\r\n                    this._itemArrowUp(e.target as HTMLElement);\r\n                } else if (e.which === 40) {\r\n                    // Arrow down\r\n                    e.preventDefault();\r\n                    this._itemArrowDown(e.target as HTMLElement);\r\n                }\r\n            }\r\n        };\r\n\r\n        item.onclick = (e: MouseEvent): void => {\r\n            if (e.eventPhase === 2) {\r\n                this._itemClicked(e.target as HTMLElement, e.ctrlKey);\r\n            }\r\n        };\r\n\r\n        item.ondblclick = (e: MouseEvent): void => {\r\n            if (!(<HTMLElement>e.target).classList.contains(BaseListBox.LIST_ITEM_CLASS_GROUP)) {\r\n                this._fireEvent(BaseListBox.EVENT_ITEM_DOUBLE_CLICKED, this._getDataItem((e.target as HTMLElement).id));\r\n            }\r\n        };\r\n\r\n        if (dataItem.disabled) {\r\n            item.classList.add(BaseListBox.LIST_ITEM_CLASS_DISABLED);\r\n        }\r\n\r\n        if (dataItem.groupHeader) {\r\n            item.classList.add(BaseListBox.LIST_ITEM_CLASS_GROUP);\r\n        }\r\n\r\n        if (dataItem.selected) {\r\n            this._itemClicked(item, true);\r\n        }\r\n\r\n        if (dataItem.parentGroupId) {\r\n            const possibleParent: HTMLElement = this._locateItem(dataItem.parentGroupId);\r\n\r\n            if (possibleParent) {\r\n                parent = possibleParent;\r\n            }\r\n        }\r\n\r\n        if (parent) {\r\n            item.classList.add(BaseListBox.LIST_ITEM_CLASS_CHILD);\r\n        }\r\n\r\n        let target: HTMLElement = parent ? parent : this._list;\r\n        if (dataItem.index !== undefined && dataItem.index !== null && !internal) {\r\n            target = <HTMLElement>target.children.item(dataItem.index);\r\n            target.parentElement.insertBefore(item, target);\r\n        } else {\r\n            target.appendChild(item);\r\n        }\r\n\r\n        if (dataItem.childItems && dataItem.childItems.length > 0) {\r\n            if (!item.classList.contains(BaseListBox.LIST_ITEM_CLASS_GROUP)) {\r\n                item.classList.add(BaseListBox.LIST_ITEM_CLASS_GROUP);\r\n            }\r\n\r\n            for (let index: number = 0; index < dataItem.childItems.length; index++) {\r\n                this._addItem(this._prepareDataItem(dataItem.childItems[index]), internal, item);\r\n            }\r\n        }\r\n\r\n\r\n        return dataItem.id;\r\n    }\r\n\r\n    protected _resizeListToListBox(): void {\r\n        const computed: CSSStyleDeclaration = window.getComputedStyle(this._target, null);\r\n        const containerPadding: number = parseInt(computed.getPropertyValue(\"padding-top\"), 10) +\r\n            parseInt(computed.getPropertyValue(\"padding-bottom\"), 10);\r\n        let listHeight: number = parseInt(computed.getPropertyValue(\"height\"), 10) - containerPadding;\r\n\r\n        if (this._settings.searchBar) {\r\n            listHeight -= this._searchbarWrapper.offsetHeight;\r\n        }\r\n\r\n        this._list.style.height = listHeight + \"px\";\r\n    }\r\n\r\n    protected _clearItemSelection(domItem: HTMLElement): void {\r\n        domItem.classList.remove(BaseListBox.LIST_ITEM_CLASS_SELECTED);\r\n        this._getDataItem(domItem.id).selected = false;\r\n\r\n        if (this.multiple) {\r\n            const currentItem: ListBoxItem = this._getDataItem(domItem.id);\r\n            const removeIndex: number = this.selectedDataItems.indexOf(currentItem);\r\n            this.selectedDataItems.splice(removeIndex, 1);\r\n        } else {\r\n            this.selectedDataItems.splice(0, this.selectedDataItems.length);\r\n        }\r\n    }\r\n\r\n    protected _locateItem(name: string): HTMLElement {\r\n        let id: string = null;\r\n        for (let i: number = 0; i < this.dataItems.length; i++) {\r\n            if (this.dataItems[i].id === name || this.dataItems[i].text === name) {\r\n                id = this.dataItems[i].id;\r\n                break;\r\n            }\r\n        }\r\n\r\n        let item: HTMLElement = this._target.querySelector(\"#\" + id) as HTMLElement;\r\n        if (!item) {\r\n            const titleItems: NodeListOf<Element> = this._target.querySelectorAll('div[title=\"' + id + '\"]');\r\n\r\n            if (titleItems.length > 0) {\r\n                return titleItems[0] as HTMLElement;\r\n            }\r\n        }\r\n\r\n        return item;\r\n    }\r\n\r\n    private _findNextItem(current: HTMLElement, direction: string): HTMLElement {\r\n        let potentialNext: Element = current;\r\n\r\n        do {\r\n            potentialNext = potentialNext[direction + \"ElementSibling\"];\r\n\r\n            if (!potentialNext) {\r\n                const parent: HTMLElement = current.parentElement;\r\n                if (parent) {\r\n                    const sibling: Element = parent[direction + \"ElementSibling\"];\r\n                    if (!sibling) {\r\n                        return null;\r\n                    }\r\n\r\n                    const nextChildren: NodeListOf<Element> = sibling.children;\r\n                    if (nextChildren.length > 0) {\r\n                        potentialNext = direction === \"next\"\r\n                            ? nextChildren[0].firstElementChild\r\n                            : nextChildren[0].lastElementChild;\r\n                    } else {\r\n                        potentialNext = parent;\r\n                    }\r\n                } else {\r\n                    return null;\r\n                }\r\n            }\r\n\r\n            if (potentialNext && potentialNext.classList.contains(BaseListBox.LIST_ITEM_CLASS_DISABLED)) {\r\n                continue;\r\n            }\r\n\r\n            return potentialNext as HTMLElement;\r\n        } while (true);\r\n    }\r\n\r\n    public _fireEvent(name: string, args: any): void {\r\n        let delegate: (e: ListBoxEvent) => void = this._settings[\"on\" + name[0].toUpperCase() + name.substr(1)];\r\n\r\n        if (delegate) {\r\n            delegate({ eventName: name, target: this._target, args: args });\r\n        }\r\n    }\r\n\r\n    private _elementIndex(element: Element): number {\r\n        const childs: Element[] = Array.prototype.slice.call(element.parentElement.children);\r\n        return childs.indexOf(element);\r\n    }\r\n\r\n    protected _getDataItem(id: string): ListBoxItem {\r\n        for (let i: number = 0; i < this.dataItems.length; i++) {\r\n            if (this.dataItems[i].id === id) {\r\n                return this.dataItems[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private _itemArrowUp(domItem: HTMLElement): void {\r\n        const prev: HTMLElement = this._findNextItem(domItem, \"previous\");\r\n\r\n        if (prev) {\r\n            this._clearItemSelection(domItem);\r\n            this._itemClicked(prev);\r\n        }\r\n    }\r\n\r\n    private _itemArrowDown(domItem: HTMLElement): void {\r\n        const next: HTMLElement = this._findNextItem(domItem, \"next\");\r\n\r\n        if (next) {\r\n            this._clearItemSelection(domItem);\r\n            this._itemClicked(next);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /*******************************  PUBLIC API  ******************************* */\r\n\r\n    /**\r\n     * Add item to the listBox.\r\n     *\r\n     * @this {BaseListBox}\r\n     * @param {object} dataItem display data for item\r\n     * @param {object} internal: true if this function is not called directly as api function.\r\n     */\r\n    public addItem(dataItem: ListBoxItem|string, internal: boolean = false): string {\r\n        /* tslint:disable:no-string-literal */\r\n        if (!internal && !this.multiple && dataItem[\"selected\"]) {\r\n            this.clearSelection();\r\n        }\r\n        /* tslint:enable:no-string-literal */\r\n\r\n        const id: string = this._addItem(this._prepareDataItem(dataItem), internal, null);\r\n\r\n        if (!internal) {\r\n            this._fireEvent(BaseListBox.EVENT_ITEMS_CHANGED, this.getItems());\r\n        }\r\n\r\n        return id;\r\n    }\r\n\r\n    /**\r\n     * Add multiple item to the listBox.\r\n     *\r\n     * @this {BaseListBox}\r\n     * @param {object} items display data of items\r\n     */\r\n    public addItems(items: (string|ListBoxItem)[]): string[] {\r\n        return items.map((item: string|ListBoxItem) => this.addItem(item));\r\n    }\r\n\r\n    /**\r\n     * Remove first matching item from the listBox.\r\n     *\r\n     * @this {BaseListBox}\r\n     * @param {string} item: display text or id from item to remove\r\n     */\r\n    public removeItem(item: string): void {\r\n        const uiItem: HTMLElement = this._locateItem(item);\r\n        if (uiItem) {\r\n            this._clearItemSelection(uiItem);\r\n            uiItem.parentElement.removeChild(uiItem);\r\n\r\n            const dataItem: ListBoxItem = this._getDataItem(uiItem.id);\r\n            this.dataItems.splice(this.dataItems.indexOf(dataItem), 1);\r\n\r\n            const selectedIndex: number = this.selectedDataItems.indexOf(dataItem);\r\n            if (selectedIndex !== -1) {\r\n                this.selectedDataItems.splice(selectedIndex, 1);\r\n            }\r\n\r\n            this._fireEvent(BaseListBox.EVENT_ITEMS_CHANGED, this.getItems());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove all matching items of array from the listBox.\r\n     *\r\n     * @this {BaseListBox}\r\n     * @param {string[]} items: display text or id from items to remove\r\n     */\r\n    public removeItems(items: string[]): void {\r\n        items.forEach((item: string) => this.removeItem(item));\r\n    }\r\n\r\n\r\n    /**\r\n     * Reverts all changes on the DOM\r\n     *\r\n     * @this {BaseListBox}\r\n     */\r\n    public destroy(): void {\r\n        while (this._target.firstChild) {\r\n            this._target.removeChild(this._target.firstChild);\r\n        }\r\n\r\n        this._target.classList.remove(BaseListBox.MAIN_CLASS);\r\n    }\r\n\r\n    /**\r\n     * Clears all selected items.\r\n     */\r\n    public clearSelection(): void {\r\n        // Remove selected class from all other items\r\n        const allItems: NodeList = this._list.querySelectorAll(\".\" + BaseListBox.LIST_ITEM_CLASS);\r\n\r\n        for (let index: number = 0; index < allItems.length; index++) {\r\n            (<HTMLElement>allItems[index]).classList.remove(BaseListBox.LIST_ITEM_CLASS_SELECTED);\r\n            this._getDataItem((allItems[index] as Element).id).selected = false;\r\n        }\r\n\r\n        this.selectedDataItems = [];\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the dataItem for a given id or text.\r\n     *\r\n     * @param {object} id unique id or text from listItem\r\n     */\r\n    public getItem(id: string): ListBoxItem {\r\n        let data: ListBoxItem = null;\r\n\r\n        const item: HTMLElement = this._locateItem(id);\r\n\r\n        if (item) {\r\n            data = this._getDataItem(item.id);\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns all dataItems.\r\n     */\r\n    public getItems(): ListBoxItem[] {\r\n        const items: ListBoxItem[] = [];\r\n\r\n        const childs: NodeList = this._list.children;\r\n        for (let index: number = 0; index < childs.length; index++) {\r\n            items.push(this._getDataItem((childs[index] as Element).id));\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n\r\n    /**\r\n     * Decreases the index of the item by one.\r\n     *\r\n     * @param {object} id unique id or text from listItem\r\n     */\r\n    public moveItemUp(id: string): number {\r\n        let newIndex: number = null;\r\n\r\n        const item: HTMLElement = this._locateItem(id);\r\n\r\n        if (item && item.previousElementSibling) {\r\n            item.parentElement.insertBefore(item, item.previousElementSibling);\r\n            newIndex = this._elementIndex(item);\r\n            this._getDataItem(item.id).index = newIndex;\r\n            this._fireEvent(BaseListBox.EVENT_ITEMS_CHANGED, this.getItems());\r\n        } else if (item) {\r\n            newIndex = this._elementIndex(item);\r\n        }\r\n\r\n        return newIndex;\r\n    }\r\n\r\n    /**\r\n     * Increases the index of the item by one.\r\n     *\r\n     * @param {object} id unique id or text from listItem\r\n     */\r\n    public moveItemDown(id: string): number {\r\n        let newIndex: number = null;\r\n\r\n        const item: HTMLElement = this._locateItem(id);\r\n\r\n        if (item && item.nextElementSibling) {\r\n            item.parentNode.insertBefore(item.nextElementSibling, item);\r\n            newIndex = this._elementIndex(item);\r\n            this._getDataItem(item.id).index = newIndex;\r\n            this._fireEvent(BaseListBox.EVENT_ITEMS_CHANGED, this.getItems());\r\n        } else if (item) {\r\n            newIndex = this._elementIndex(item);\r\n        }\r\n\r\n        return newIndex;\r\n    }\r\n\r\n    /**\r\n     * Sets the index of the item to zero.\r\n     *\r\n     * @param {object} id unique id or text from listItem\r\n     */\r\n    public moveItemToTop(id: string): number {\r\n        let newIndex: number = null;\r\n\r\n        const item: HTMLElement = this._locateItem(id);\r\n\r\n        if (item) {\r\n            item.parentElement.insertBefore(item, item.parentElement.firstElementChild);\r\n            newIndex = this._elementIndex(item);\r\n            this._getDataItem(item.id).index = newIndex;\r\n            this._fireEvent(BaseListBox.EVENT_ITEMS_CHANGED, this.getItems());\r\n        }\r\n\r\n        return newIndex;\r\n    }\r\n\r\n    /**\r\n     * Sets the index of the matching item to the highest.\r\n     *\r\n     * @param {object} id unique id or text from listItem\r\n     */\r\n    public moveItemToBottom(id: string): number {\r\n        let newIndex: number = null;\r\n\r\n        const item: HTMLElement = this._locateItem(id);\r\n\r\n        if (item) {\r\n            item.parentElement.appendChild(item);\r\n            newIndex = this._elementIndex(item);\r\n            this._getDataItem(item.id).index = newIndex;\r\n        }\r\n\r\n        this._fireEvent(BaseListBox.EVENT_ITEMS_CHANGED, this.getItems());\r\n\r\n        return newIndex;\r\n    }\r\n\r\n\r\n    /**\r\n     * Enables or disables the whole component.\r\n     *\r\n     * @param {boolean} enable: new enable value.\r\n     */\r\n    public enable(enable: boolean): void {\r\n        if (enable) {\r\n            this._target.classList.remove(BaseListBox.MAIN_DISABLED_CLASS);\r\n        } else if (!this._target.classList.contains(BaseListBox.MAIN_DISABLED_CLASS)) {\r\n            this._target.classList.add(BaseListBox.MAIN_DISABLED_CLASS);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns all dataItems which are selected.\r\n     */\r\n    public getSelection(): ListBoxItem[] {\r\n        return this.selectedDataItems;\r\n    }\r\n}\r\n","import {SingleSelectListBox} from \"./SingleSelectListBox\";\r\nimport {MultiSelectListBox} from \"./MultiSelectListBox\";\r\n\r\n(window as any).SingleSelectListBox = SingleSelectListBox;\r\n(window as any).MultiSelectListBox = MultiSelectListBox;\r\n","import {BaseListBox} from \"./BaseListBox\";\r\nimport {ListBoxSettings} from \"./contract/ListBoxSettings\";\r\nimport {ListBoxItem} from \"./contract/ListBoxItem\";\r\n\r\nexport class SingleSelectListBox extends BaseListBox {\r\n\r\n    private _selectedDomItem: HTMLElement;\r\n\r\n    /**\r\n     * Create an instance of SingleSelectListBox.\r\n     *\r\n     * Inherit a {ListBox} class.\r\n     *\r\n     * @constructor\r\n     * @this {SingleSelectListBox}\r\n     * @param {object} domElement DOM element to be converted to the ListBox\r\n     * @param {object} options an object with ListBox settings\r\n     */\r\n    constructor(domElement: HTMLElement, options?: ListBoxSettings) {\r\n        super(domElement, options, false);\r\n        this._selectedDomItem = null;\r\n        this._createListbox();\r\n    }\r\n\r\n    protected _itemClicked(domItem: HTMLElement, ctrl: boolean = false): void {\r\n        if (domItem.classList.contains(BaseListBox.LIST_ITEM_CLASS_DISABLED) ||\r\n            domItem.classList.contains(BaseListBox.LIST_ITEM_CLASS_GROUP)) {\r\n            return;\r\n        }\r\n\r\n        if (this._selectedDomItem) {\r\n            this.clearSelection();\r\n            this._selectedDomItem = null;\r\n        }\r\n\r\n        domItem.classList.toggle(BaseListBox.LIST_ITEM_CLASS_SELECTED);\r\n        domItem.focus();\r\n        this._selectedDomItem = domItem;\r\n\r\n        const dataItem: ListBoxItem = this._getDataItem(domItem.id);\r\n        dataItem.selected = true;\r\n        this.selectedDataItems.push(dataItem);\r\n\r\n        this._fireEvent(BaseListBox.EVENT_VALUE_CHANGED, this._getDataItem(domItem.id));\r\n    }\r\n\r\n    protected _filterChanged(): void {\r\n        if (!this._selectedDomItem || this._selectedDomItem.style.display === \"none\") {\r\n            const elements: NodeListOf<Element> = this._list.querySelectorAll(\".\" + BaseListBox.LIST_ITEM_CLASS);\r\n            for (let i: number = 0; i < elements.length; i++) {\r\n                let element: HTMLElement = elements.item(i) as HTMLElement;\r\n                if (!element.classList.contains(BaseListBox.LIST_ITEM_CLASS_GROUP) &&\r\n                    !element.classList.contains(BaseListBox.LIST_ITEM_CLASS_DISABLED) &&\r\n                    element.style.display !== \"none\") {\r\n                    this._itemClicked(element);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this._fireEvent(BaseListBox.EVENT_FILTER_CHANGED, this._searchbar.value);\r\n    }\r\n}\r\n","import {BaseListBox} from \"./BaseListBox\";\r\nimport {ListBoxSettings} from \"./contract/ListBoxSettings\";\r\nimport {ListBoxItem} from \"./contract/ListBoxItem\";\r\n\r\nexport class MultiSelectListBox extends BaseListBox {\r\n\r\n    /**\r\n     * Create an instance of MultiSelectListBox.\r\n     *\r\n     * Inherit a {Listbox} class.\r\n     *\r\n     * @constructor\r\n     * @this {MultiSelectListBox}\r\n     * @param {object} domElement DOM element to be converted to the ListBox\r\n     * @param {object} options an object with ListBox settings\r\n     */\r\n    constructor(domElement: HTMLElement, options?: ListBoxSettings) {\r\n        super(domElement, options, true);\r\n        this._createListbox();\r\n    }\r\n\r\n    protected _itemClicked(domItem: HTMLElement, ctrl: boolean = false): void {\r\n        if (domItem.classList.contains(BaseListBox.LIST_ITEM_CLASS_DISABLED) ||\r\n            domItem.classList.contains(BaseListBox.LIST_ITEM_CLASS_GROUP)) {\r\n            return;\r\n        }\r\n\r\n        let dataItem: ListBoxItem = this._getDataItem(domItem.id);\r\n\r\n        if (domItem.classList.contains(BaseListBox.LIST_ITEM_CLASS_SELECTED)) {\r\n            if (!ctrl) {\r\n                // deselect all except this\r\n                this.clearSelection();\r\n                domItem.classList.add(BaseListBox.LIST_ITEM_CLASS_SELECTED);\r\n                dataItem.selected = true;\r\n                this.selectedDataItems.push(dataItem);\r\n            } else {\r\n                // deselect only this\r\n                domItem.classList.remove(BaseListBox.LIST_ITEM_CLASS_SELECTED);\r\n                dataItem.selected = false;\r\n                const removeIndex: number = this.selectedDataItems.indexOf(\r\n                    this._getDataItem(domItem.id));\r\n                this.selectedDataItems.splice(removeIndex, 1);\r\n            }\r\n        } else {\r\n            if (!ctrl) {\r\n                // deselect all others\r\n                this.clearSelection();\r\n            }\r\n\r\n            domItem.focus();\r\n            domItem.classList.add(BaseListBox.LIST_ITEM_CLASS_SELECTED);\r\n            dataItem.selected = true;\r\n            this.selectedDataItems.push(dataItem);\r\n        }\r\n\r\n        this._fireEvent(BaseListBox.EVENT_VALUE_CHANGED, this.selectedDataItems);\r\n    }\r\n\r\n    protected _filterChanged(): void {\r\n        this._fireEvent(BaseListBox.EVENT_FILTER_CHANGED, this._searchbar.value);\r\n    }\r\n}\r\n"],"sourceRoot":""}